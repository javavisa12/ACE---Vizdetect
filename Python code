!pip install streamlit pandas scikit-learn matplotlib
!pip install pyngrok
!wget -q -O ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
!unzip -o ngrok.zip
!chmod +x ngrok

with open("app.py", "w") as f:
    f.write("""
import streamlit as st
import pandas as pd
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

# Title
st.title("🔍 One-Click Anomaly Detection System")

# Upload CSV File
uploaded_file = st.file_uploader("Upload your transaction data (CSV)", type="csv")

if uploaded_file:
    # Load Data
    st.subheader("📊 Uploaded Data")
    df = pd.read_csv(uploaded_file)
    st.write(df.head())

    # Feature Selection
    st.subheader("⚙️ Selecting Relevant Features")
    features = ['Time', 'Amount']
    if all(col in df.columns for col in features):
        X = df[features]

        # Preprocess the Data
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # Train Isolation Forest
        st.subheader("🚀 Running Anomaly Detection")
        isolation_forest = IsolationForest(n_estimators=100, contamination=0.01, random_state=42)
        predictions = isolation_forest.fit_predict(X_scaled)
        df['Anomaly'] = predictions
        df['Anomaly'] = df['Anomaly'].map({1: 'Normal', -1: 'Anomaly'})

        # Show Results
        st.subheader("✅ Results")
        st.write(df.head(10))

        # Summary
        anomaly_count = df['Anomaly'].value_counts()
        st.write("Anomalies Detected:")
        st.write(anomaly_count)

        # Visualization
        st.subheader("📈 Anomaly Visualization")
        plt.figure(figsize=(10, 6))
        plt.scatter(df['Time'], df['Amount'], c=(df['Anomaly'] == 'Anomaly'), cmap='coolwarm', alpha=0.6)
        plt.title("Anomaly Detection: Time vs Amount")
        plt.xlabel("Time")
        plt.ylabel("Amount")
        st.pyplot(plt)

    else:
        st.error("The dataset must contain 'Time' and 'Amount' columns.")""")


from pyngrok import ngrok

# Start the ngrok tunnel using the correct configuration format
tunnel = ngrok.connect(8501, "http")  # Expose HTTP on port 8501
print("Streamlit is running at:", tunnel)

# Step 6: Run the Streamlit app
!streamlit run app.py &>/dev/null &

